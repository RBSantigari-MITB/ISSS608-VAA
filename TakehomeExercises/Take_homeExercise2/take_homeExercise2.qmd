---
title: "Take_homeExercise2"
author: "Rajesh"
format:
  html:
    toc: true
editor: visual
---

# Loading Packages

```{r setup, include=FALSE}
library(tidygraph)
library(tidyverse)
```

# Step 1: Load Your CSV Files
```{r}
nodes <- read_csv("C:/RBSantigari-MITB/ISSS608-VAA/TakehomeExercises/Take_homeExercise2/data/Nodes_Table.csv")
links <- read_csv("C:/RBSantigari-MITB/ISSS608-VAA/TakehomeExercises/Take_homeExercise2/data/Links_Table.csv")
```

# Step 2: Check Structure
```{r}
glimpse(nodes)
glimpse(links)
```

# Step 3: Identify Sailor Shift
## 3.1 Find Sailor Shift in the Nodes
```{r}
sailor <- nodes %>%
  filter(name == "Sailor Shift")

sailor
```

## 3.2 Save Sailor's ID
```{r}
sailor_id <- 17255
```

## 3.3 Get All Edges Where Sailor is Source or Target
```{r}
sailor_edges <- links %>%
  filter(source == sailor_id | target == sailor_id)

glimpse(sailor_edges)
```

## 3.4 Get Connected IDs (Excluding Sailor Herself)
```{r}
connected_ids <- unique(c(sailor_edges$source, sailor_edges$target))
connected_ids <- connected_ids[connected_ids != sailor_id]
```

# Step 4: Extract Connected Nodes
## 4.1 View Sample Rows
```{r}
connected_nodes <- nodes %>%
  filter(id %in% connected_ids) %>%
  select(id, `Node Type`, name, genre)

head(connected_nodes, 10)
```

## 4.2 Clean Connected Nodes (Remove NA in ID/Name)
```{r}
connected_nodes <- connected_nodes %>%
  filter(!is.na(id) & !is.na(name))
```

# Step 5: Filter Connected Links
```{r}
connected_links <- links %>%
  filter(source %in% connected_nodes$id | target %in% connected_nodes$id) %>%
  filter(!is.na(source) & !is.na(target) & !is.na(`Edge Type`))

```

# Step 6: Check for Remaining NA Rows
```{r}
sum(is.na(connected_nodes$id))           # Should be 0
sum(is.na(connected_nodes$name))         # Should be 0
sum(is.na(connected_links$source))       # Should be 0
sum(is.na(connected_links$target))       # Should be 0
sum(is.na(connected_links$`Edge Type`))  # Should be 0
```

# Step 7: Ensure Source and Target are Integers
```{r}
connected_links <- connected_links %>%
  mutate(
    source = as.integer(source),
    target = as.integer(target)
  )
```

# Step 8: Filter Links by Valid Node IDs
```{r}
valid_ids <- connected_nodes$id

connected_links <- connected_links %>%
  filter(source %in% valid_ids & target %in% valid_ids)
```
