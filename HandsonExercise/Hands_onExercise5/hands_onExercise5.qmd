---
title: "Hands_onExercise5"
author: "Rajesh babu Santigari"
format: html
editor: visual
---

##Installing and launching R packages
```{r}
pacman::p_load(igraph, tidygraph, ggraph, 
               visNetwork, lubridate, clock,
               tidyverse, graphlayouts, 
               concaveman, ggforce)
```

##The Data
###Importing network data from files
```{r}
GAStech_nodes <- read_csv("C:\\RBSantigari-MITB\\ISSS608-VAA\\HandsonExercise\\Hands_onExercise5\\data\\GAStech_email_nodes.csv")

GAStech_edges <- read_csv("C:\\RBSantigari-MITB\\ISSS608-VAA\\HandsonExercise\\Hands_onExercise5\\data\\GAStech_email_edges.csv")
```

###Reviewing the imported data
```{r}
glimpse(GAStech_edges)
```

###Wrangling time
```{r}
GAStech_edges <- GAStech_edges %>%
  mutate(SendDate = dmy(SentDate)) %>%
  mutate(Weekday = wday(SentDate,
                        label = TRUE,
                        abbr = FALSE))
```

###Wrangling attributes
```{r}
GAStech_edges_aggregated <- GAStech_edges %>%
  filter(MainSubject == "Work related") %>%
  group_by(source, target, Weekday) %>%
    summarise(Weight = n()) %>%
  filter(source!=target) %>%
  filter(Weight > 1) %>%
  ungroup()
```

```{r}
GAStech_nodes <- GAStech_nodes %>%
  rename(name = id) 
```

### Reviewing the revised edges file
```{r}
glimpse(GAStech_edges_aggregated)
```


```{r}
glimpse(GAStech_nodes)
```

##Creating network objects using tidygraph
###The tbl_graph object
### The dplyr verbs in tidygraph
###Using tbl_graph() to build tidygraph data model.



# Build tidygraph object
```{r tbl_graph_setup, message=FALSE, warning=FALSE}
# Load the required libraries
library(tidygraph)
library(ggraph)
library(tidyverse)
```

```{r}
GAStech_graph <- tbl_graph(
  nodes = GAStech_nodes,
  edges = GAStech_edges_aggregated,
  directed = TRUE
)

```

###Changing the active object
```{r}
GAStech_graph %>%
  activate(edges) %>%
  arrange(desc(Weight))
```

##Plotting Static Network Graphs with ggraph package
###Plotting a basic network graph
```{r}
ggraph(GAStech_graph) +
  geom_edge_link() +
  geom_node_point()
```

###Changing the default network graph theme
```{r}
g <- ggraph(GAStech_graph) + 
  geom_edge_link(aes()) +
  geom_node_point(aes())

g + theme_graph()
```

###Changing the coloring of the plot
```{r}
g <- ggraph(GAStech_graph) + 
  geom_edge_link(aes(colour = 'grey50')) +
  geom_node_point(aes(colour = 'grey40'))

g + theme_graph(background = 'grey10',
                text_colour = 'white')
```

####1. Star Layout
```{r}
ggraph(GAStech_graph, layout = "star") +
  geom_edge_link(color = "red") +
  geom_node_point(color = "green") +
  theme_graph(background = "grey", text_colour = "white")
```

#### 2. Circle Layout
```{r}
ggraph(GAStech_graph, layout = "circle") +
  geom_edge_link(color = "green") +
  geom_node_point(color = "red") +
  theme_graph(background = "grey", text_colour = "white")
```

####Gem Layout
```{r}
ggraph(GAStech_graph, layout = "gem") +
  geom_edge_link(color = "yellow") +
  geom_node_point(color = "violet") +
  theme_graph(background = "grey", text_colour = "white")
```

### Fruchterman and Reingold layout
```{r}
g <- ggraph(GAStech_graph, 
            layout = "fr") +
  geom_edge_link(aes()) +
  geom_node_point(aes())

g + theme_graph()
```

###Modifying network nodes
```{r}
g <- ggraph(GAStech_graph, 
            layout = "nicely") + 
  geom_edge_link(aes()) +
  geom_node_point(aes(colour = Department, 
                      size = 3))

g + theme_graph()
```

###Modifying edges
```{r}
g <- ggraph(GAStech_graph, 
            layout = "nicely") +
  geom_edge_link(aes(width=Weight), 
                 alpha=0.2) +
  scale_edge_width(range = c(0.1, 5)) +
  geom_node_point(aes(colour = Department), 
                  size = 3)

g + theme_graph()
```

##Creating facet graphs
###Working with facet_edges()
```{r}
set_graph_style()

g <- ggraph(GAStech_graph, 
            layout = "nicely") + 
  geom_edge_link(aes(width=Weight), 
                 alpha=0.2) +
  scale_edge_width(range = c(0.1, 5)) +
  geom_node_point(aes(colour = Department), 
                  size = 2)

g + facet_edges(~Weekday) 
```

###Working with facet_edges()
```{r}
set_graph_style()

g <- ggraph(GAStech_graph, 
            layout = "nicely") + 
  geom_edge_link(aes(width=Weight), 
                 alpha=0.2) +
  scale_edge_width(range = c(0.1, 5)) +
  geom_node_point(aes(colour = Department), 
                  size = 2) +
  theme(legend.position = 'bottom')
  
g + facet_edges(~Weekday)+theme_graph(base_family = "sans")
```

###A framed facet graph
```{r}
set_graph_style() 

g <- ggraph(GAStech_graph, 
            layout = "nicely") + 
  geom_edge_link(aes(width=Weight), 
                 alpha=0.2) +
  scale_edge_width(range = c(0.1, 5)) +
  geom_node_point(aes(colour = Department), 
                  size = 2)
  
g + facet_edges(~Weekday) +
  th_foreground(foreground = "grey80",  
                border = TRUE) +
  theme(legend.position = 'bottom')
```

###Working with facet_nodes()
```{r}
set_graph_style()

g <- ggraph(GAStech_graph, 
            layout = "nicely") + 
  geom_edge_link(aes(width=Weight), 
                 alpha=0.2) +
  scale_edge_width(range = c(0.1, 5)) +
  geom_node_point(aes(colour = Department), 
                  size = 2)
  
g + facet_nodes(~Department)+
  th_foreground(foreground = "grey80",  
                border = TRUE) +
  theme(legend.position = 'bottom')

```

##Network Metrics Analysis
###Computing centrality indices
```{r}
g <- GAStech_graph %>%
  mutate(betweenness_centrality = centrality_betweenness()) %>%
  ggraph(layout = "fr") + 
  geom_edge_link(aes(width=Weight), 
                 alpha=0.2) +
  scale_edge_width(range = c(0.1, 5)) +
  geom_node_point(aes(colour = Department,
            size=betweenness_centrality))
g + theme_graph()
```

###Visualising network metrics
```{r}
g <- GAStech_graph %>%
  ggraph(layout = "fr") + 
  geom_edge_link(aes(width=Weight), 
                 alpha=0.2) +
  scale_edge_width(range = c(0.1, 5)) +
  geom_node_point(aes(colour = Department, 
                      size = centrality_betweenness()))
g + theme_graph()
```

###Visualising Community
```{r}
g <- GAStech_graph %>%
  mutate(community = as.factor(
    group_edge_betweenness(
      weights = Weight, 
      directed = TRUE))) %>%
  ggraph(layout = "fr") + 
  geom_edge_link(
    aes(
      width=Weight), 
    alpha=0.2) +
  scale_edge_width(
    range = c(0.1, 5)) +
  geom_node_point(
    aes(colour = community))  

g + theme_graph()
```

####In order to support effective visual investigation, the community network above has been revised by using geom_mark_hull() of ggforce package.
```{r}
g <- GAStech_graph %>%
  activate(nodes) %>%
  mutate(community = as.factor(
    group_optimal(weights = Weight)),
         betweenness_measure = centrality_betweenness()) %>%
  ggraph(layout = "fr") +
  geom_mark_hull(
    aes(x, y, 
        group = community, 
        fill = community),  
    alpha = 0.2,  
    expand = unit(0.3, "cm"),  # Expand
    radius = unit(0.3, "cm")  # Smoothness
  ) + 
  geom_edge_link(aes(width=Weight), 
                 alpha=0.2) +
  scale_edge_width(range = c(0.1, 5)) +
  geom_node_point(aes(fill = Department,
                      size = betweenness_measure),
                      color = "black",
                      shape = 21)
  
g + theme_graph()
```

## Building Interactive Network Graph with visNetwork
###Data preparation
```{r}
GAStech_edges_aggregated <- GAStech_edges %>%
  left_join(GAStech_nodes, by = c("sourceLabel" = "label")) %>%
  rename(from = name) %>%
  left_join(GAStech_nodes, by = c("targetLabel" = "label")) %>%
  rename(to = name) %>%
  filter(MainSubject == "Work related") %>%
  group_by(from, to) %>%
    summarise(weight = n()) %>%
  filter(from!=to) %>%
  filter(weight > 1) %>%
  ungroup()
```

###Plotting the first interactive network graph
```{r}
visNetwork(GAStech_nodes, 
           GAStech_edges_aggregated)
```

```{r}
GAStech_nodes_vis <- GAStech_nodes %>%
  rename(id = name)
```


### Working with layout
```{r}
library(visNetwork)

visNetwork(GAStech_nodes_vis, GAStech_edges_aggregated) %>%
  visIgraphLayout(layout = "layout_with_fr")
```

###Working with visual attributes - Nodes
```{r}
GAStech_nodes_vis <- GAStech_nodes_vis %>%
  mutate(group = Department)


visNetwork(GAStech_nodes_vis, GAStech_edges_aggregated) %>%
  visIgraphLayout(layout = "layout_with_fr") %>%
  visLegend() %>%
  visLayout(randomSeed = 123)

```

###Working with visual attributes - Edges
```{r}
visNetwork(GAStech_nodes_vis,
           GAStech_edges_aggregated) %>%
  visIgraphLayout(layout = "layout_with_fr") %>%
  visEdges(arrows = "to", 
           smooth = list(enabled = TRUE, 
                         type = "curvedCW")) %>%
  visLegend() %>%
  visLayout(randomSeed = 123)
```

###Interactivity
```{r}
visNetwork(GAStech_nodes_vis,
           GAStech_edges_aggregated) %>%
  visIgraphLayout(layout = "layout_with_fr") %>%
  visOptions(highlightNearest = TRUE,
             nodesIdSelection = TRUE) %>%
  visLegend() %>%
  visLayout(randomSeed = 123)
```

